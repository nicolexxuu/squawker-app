[{"C:\\code\\web-dev\\warbler\\warbler-client\\src\\index.js":"1","C:\\code\\web-dev\\warbler\\warbler-client\\src\\reportWebVitals.js":"2","C:\\code\\web-dev\\warbler\\warbler-client\\src\\containers\\App.js":"3","C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\index.js":"4","C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\reducers\\index.js":"5","C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\reducers\\currentUser.js":"6","C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\reducers\\errors.js":"7","C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\actionTypes.js":"8","C:\\code\\web-dev\\warbler\\warbler-client\\src\\containers\\Navbar.js":"9","C:\\code\\web-dev\\warbler\\warbler-client\\src\\containers\\Main.js":"10","C:\\code\\web-dev\\warbler\\warbler-client\\src\\components\\Homepage.js":"11","C:\\code\\web-dev\\warbler\\warbler-client\\src\\components\\AuthForm.js":"12","C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\actions\\auth.js":"13","C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\actions\\errors.js":"14","C:\\code\\web-dev\\warbler\\warbler-client\\src\\services\\api.js":"15","C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\reducers\\messages.js":"16","C:\\code\\web-dev\\warbler\\warbler-client\\src\\components\\MessageTimeline.js":"17","C:\\code\\web-dev\\warbler\\warbler-client\\src\\containers\\MessageList.js":"18","C:\\code\\web-dev\\warbler\\warbler-client\\src\\components\\MessageItem.js":"19","C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\actions\\messages.js":"20","C:\\code\\web-dev\\warbler\\warbler-client\\src\\components\\UserAside.js":"21","C:\\code\\web-dev\\warbler\\warbler-client\\src\\hocs\\withAuth.js":"22","C:\\code\\web-dev\\warbler\\warbler-client\\src\\containers\\MessageForm.js":"23"},{"size":546,"mtime":1678180170440,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1678178820211,"results":"26","hashOfConfig":"25"},{"size":885,"mtime":1682304696943,"results":"27","hashOfConfig":"25"},{"size":497,"mtime":1678179961309,"results":"28","hashOfConfig":"25"},{"size":271,"mtime":1679496469947,"results":"29","hashOfConfig":"25"},{"size":588,"mtime":1681827415859,"results":"30","hashOfConfig":"25"},{"size":359,"mtime":1678179419616,"results":"31","hashOfConfig":"25"},{"size":233,"mtime":1679495577131,"results":"32","hashOfConfig":"25"},{"size":7649,"mtime":1681826370342,"results":"33","hashOfConfig":"25"},{"size":2623,"mtime":1682304743443,"results":"34","hashOfConfig":"25"},{"size":6309,"mtime":1682304729359,"results":"35","hashOfConfig":"25"},{"size":11991,"mtime":1682002152544,"results":"36","hashOfConfig":"25"},{"size":1360,"mtime":1682304706861,"results":"37","hashOfConfig":"25"},{"size":203,"mtime":1678461704620,"results":"38","hashOfConfig":"25"},{"size":672,"mtime":1681826665540,"results":"39","hashOfConfig":"25"},{"size":393,"mtime":1681310342533,"results":"40","hashOfConfig":"25"},{"size":395,"mtime":1681310342479,"results":"41","hashOfConfig":"25"},{"size":1457,"mtime":1682304757364,"results":"42","hashOfConfig":"25"},{"size":1448,"mtime":1681310342477,"results":"43","hashOfConfig":"25"},{"size":1230,"mtime":1681310342531,"results":"44","hashOfConfig":"25"},{"size":569,"mtime":1680011633496,"results":"45","hashOfConfig":"25"},{"size":835,"mtime":1681310342490,"results":"46","hashOfConfig":"25"},{"size":3907,"mtime":1681310342484,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1f8id4q",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"51"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\code\\web-dev\\warbler\\warbler-client\\src\\index.js",[],[],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\reportWebVitals.js",[],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\containers\\App.js",[],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\index.js",[],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\reducers\\index.js",[],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\reducers\\currentUser.js",["124"],[],"import { SET_CURRENT_USER } from \"../actionTypes\";\r\n\r\nconst DEFAULT_STATE = {\r\n    isAuthenticated: false, // hopefully be true, when logged in\r\n    user: {}, // all the user info when logged in\r\n};\r\n\r\nexport default (state = DEFAULT_STATE, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                // turn empty object into false or if there are keys, true\r\n                isAuthenticated: !!Object.keys(action.user).length,\r\n                user: action.user,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\reducers\\errors.js",["125"],[],"import { ADD_ERROR, REMOVE_ERROR } from \"../actionTypes\";\r\n\r\nexport default (state = { message: null }, action) => {\r\n    switch (action.type) {\r\n        case ADD_ERROR:\r\n            return { ...state, message: action.error };\r\n        case REMOVE_ERROR:\r\n            return { ...state, message: null };\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\actionTypes.js",[],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\containers\\Navbar.js",["126","127","128","129"],[],"import React, { Component, useState } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../store/actions/auth\";\r\nimport { Dialog } from \"@headlessui/react\";\r\nimport { Bars3Icon, XMarkIcon } from '@heroicons/react/24/outline'\r\n\r\nconst navigation = [\r\n    { name: 'sign up', to: \"/signup\" },\r\n    { name: 'log in', to: \"/signin\" }\r\n]\r\n// const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { mobileMenuOpen: false, setMobileMenuOpen: false };\r\n    }\r\n\r\n    // render() {\r\n    // return <nav className=\"navbar navbar-expand text-rose-500\">\r\n    //     <div className=\"container-fluid\">\r\n    //         <Link to=\"/\" className=\"navbar-brand\">\r\n    //             <img src=\"\" alt=\"homepage img\" />\r\n    //         </Link>\r\n    //     </div>\r\n\r\n    //     <ul>\r\n    //         <li>\r\n    //             <Link to=\"/signup\">sign up</Link>\r\n    //         </li>\r\n    //         <li>\r\n    //             <Link to=\"/signin\">log in</Link>\r\n    //         </li>\r\n    //     </ul>\r\n    // </nav>\r\n\r\n    logout = e => {\r\n        e.preventDefault();\r\n        this.props.logout();\r\n        this.setState({ mobileMenuOpen: false });\r\n    }\r\n\r\n    render() {\r\n        return <header className=\"inset-x-0 z-50 absolute\">\r\n            <nav className=\"flex items-center justify-between p-6 lg:px-8 z-50\" aria-label=\"Global\" >\r\n                <div className=\"flex lg:flex-1 \">\r\n                    <Link to=\"/\" className=\"-m-1.5 p-1.5\">\r\n                        <span className=\"sr-only\">Your Company</span>\r\n                        <img\r\n                            className=\"h-8 w-auto\"\r\n                            src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\r\n                            alt=\"\"\r\n                        />\r\n\r\n                    </Link>\r\n                </div>\r\n                <div className=\"flex lg:hidden\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\r\n                        onClick={() => this.setState({ mobileMenuOpen: true })}\r\n                    >\r\n                        <span className=\"sr-only\">Open main menu</span>\r\n                        <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                    </button>\r\n                </div>\r\n\r\n\r\n                {this.props.currentUser.isAuthenticated ? (\r\n                    <div className=\"hidden lg:flex lg:gap-x-12\">\r\n                        <Link to={`/users/${this.props.currentUser.user.id}/messages/new`} className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n                            {\"new message\"}\r\n                        </Link>\r\n                        <a onClick={this.logout} className=\"text-sm font-semibold leading-6 text-gray-900 cursor-pointer\" >log out</a>\r\n                    </div>\r\n\r\n                ) :\r\n                    (<div className=\"hidden lg:flex lg:gap-x-12\">\r\n                        {navigation.map((item) => (\r\n\r\n                            <Link key={item.name} to={item.to} className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n                                {item.name}\r\n                            </Link>\r\n                        ))}\r\n                    </div>)\r\n                }\r\n                {/* <div className=\"hidden lg:flex lg:flex-1 lg:justify-end\">\r\n                <a href=\"#\" className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n                    Log in <span aria-hidden=\"true\">&rarr;</span>\r\n                </a>\r\n            </div> */}\r\n            </nav >\r\n            <Dialog as=\"div\" className=\"lg:hidden\" open={this.state.mobileMenuOpen} onClose={() => this.setState({ mobileMenuOpen: false })}>\r\n                <div className=\"fixed inset-0 z-50\" />\r\n                <Dialog.Panel className=\"fixed inset-y-0 right-0 z-50 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <a href=\"#\" className=\"-m-1.5 p-1.5\">\r\n                            <span className=\"sr-only\">Your Company</span>\r\n                            <img\r\n                                className=\"h-8 w-auto\"\r\n                                src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\r\n                                alt=\"\"\r\n                            />\r\n                        </a>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"-m-2.5 rounded-md p-2.5 text-gray-700\"\r\n                            onClick={() => this.setState({ mobileMenuOpen: false })}\r\n                        >\r\n                            <span className=\"sr-only\">Close menu</span>\r\n                            <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"mt-6 flow-root\">\r\n                        <div className=\"-my-6 divide-y divide-gray-500/10\">\r\n\r\n                            {this.props.currentUser.isAuthenticated ? (\r\n                                <div className=\"space-y-2 py-6\">\r\n                                    <Link to={`/users/${this.props.currentUser.user.id}/messages/new`}\r\n                                        onClick={() => { this.setState({ mobileMenuOpen: false }); }}\r\n                                        className=\"-mx-3 block rounded-lg py-2 px-3 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\">\r\n                                        new message\r\n                                    </Link>\r\n                                    <Link\r\n                                        onClick={this.logout}\r\n                                        className=\"-mx-3 block rounded-lg py-2 px-3 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50 cursor-pointer\">\r\n                                        log out\r\n                                    </Link>\r\n\r\n                                </div>\r\n                            ) : (\r\n                                < div className=\"space-y-2 py-6\">\r\n                                    {navigation.map((item) => (\r\n\r\n                                        <Link key={item.name} to={item.to} onClick={() => this.setState({ mobileMenuOpen: false })} className=\"-mx-3 block rounded-lg py-2 px-3 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\">\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                            {/* <div className=\"py-6\">\r\n                                <a\r\n                                    href=\"#\"\r\n                                    className=\"-mx-3 block rounded-lg py-2.5 px-3 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\r\n                                >\r\n                                    Log in\r\n                                </a>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                </Dialog.Panel>\r\n            </Dialog>\r\n        </header >\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        currentUser: state.currentUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","C:\\code\\web-dev\\warbler\\warbler-client\\src\\containers\\Main.js",["130"],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\components\\Homepage.js",["131","132","133","134"],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\components\\AuthForm.js",["135","136","137"],[],"import React, { Component } from \"react\";\r\nimport errors from \"../store/reducers/errors\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \r\n\r\nexport default class AuthForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            profileImageUrl: \"\"\r\n        }\r\n    }\r\n\r\n    // const navigate = useNavigate();\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const authType = this.props.signUp ? \"signup\" : \"signin\";\r\n        this.props.onAuth(authType, this.state).then(() => {\r\n            this.props.router.navigate(\"/\");\r\n        }).catch(() => {\r\n            return;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { email, username, password, profileImageUrl } = this.state;\r\n        const { heading, buttonText, signUp, errors, history, removeError } = this.props;\r\n\r\n        if (errors.message === \"Sorry, that username and/or email is taken\"\r\n            && signUp === undefined) {\r\n            removeError();\r\n        }\r\n\r\n        return (\r\n            <div className=\"flex flex-col min-h-full items-center justify-center px-6 py-12 lg:px-8\">\r\n                <div className=\"w-full max-w-md space-y-8\">\r\n                    <div>\r\n                        <img\r\n                            className=\"mx-auto h-12 w-auto\"\r\n                            src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\r\n                            alt=\"Your Company\"\r\n                        />\r\n                        <h2 className=\"mt-6 text-center text-3xl font-bold tracking-tight text-gray-900\">\r\n                            {heading}\r\n                        </h2>\r\n                        {/* <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n                            Or{' '}\r\n                            <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n                                start your 14-day free trial\r\n                            </a>\r\n                        </p> */}\r\n                    </div>\r\n\r\n                    <form className=\"mt-8 space-y-6\" onSubmit={this.handleSubmit}>\r\n                        {/* <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" /> */}\r\n                        <div className=\"-space-y-px rounded-md shadow-sm\">\r\n\r\n                            {errors.message && <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">{errors.message}</div>}\r\n\r\n                            <div>\r\n                                <label htmlFor=\"Email\" className=\"sr-only\">\r\n                                    Email\r\n                                </label>\r\n                                <input\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    onChange={this.handleChange}\r\n                                    value={email}\r\n                                    type=\"text\"\r\n                                    // type=\"email\"\r\n                                    // autoComplete=\"email\"\r\n                                    // required\r\n                                    className=\"relative block w-full rounded-t-md border-0 py-1.5 pl-3 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                                    placeholder=\"email address\"\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            <div>\r\n                                <label htmlFor=\"password\" className=\"sr-only\">Password</label>\r\n                                <input\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    onChange={this.handleChange}\r\n                                    // autoComplete=\"current-password\"\r\n                                    // required\r\n                                    className={`${signUp ? null : \"rounded-b-md \"} relative block w-full border-0 py-1.5 pl-3 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6`}\r\n                                    placeholder=\"password\"\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            {signUp && (\r\n                                <div>\r\n                                    <label htmlFor=\"username\" className=\"sr-only\">Username</label>\r\n                                    <input\r\n                                        id=\"username\"\r\n                                        name=\"username\"\r\n                                        type=\"text\"\r\n                                        onChange={this.handleChange}\r\n                                        value={username}\r\n                                        className=\"relative block w-full border-0 py-1.5 pl-3  text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                                        placeholder=\"username\"\r\n                                    />\r\n\r\n                                    <label htmlFor=\"image-url\" className=\"sr-only\">Image URL</label>\r\n                                    <input\r\n                                        id=\"image-url\"\r\n                                        name=\"profileImageUrl\"\r\n                                        type=\"text\"\r\n                                        onChange={this.handleChange}\r\n                                        value={profileImageUrl}\r\n                                        className=\"relative block w-full rounded-b-md border-0 py-1.5 pl-3 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:z-10 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                                        placeholder=\"image URL\"\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n                Email address\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  autoComplete=\"email\"\r\n                  required\r\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\r\n                  Password\r\n                </label>\r\n                <div className=\"text-sm\">\r\n                  <a href=\"#\" className=\"font-semibold text-indigo-600 hover:text-indigo-500\">\r\n                    Forgot password?\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  required\r\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n              >\r\n                Sign in\r\n              </button>\r\n            </div>*/\r\n                        }\r\n\r\n                        <div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"group relative flex w-full justify-center rounded-md bg-indigo-600 py-2 px-3 text-sm font-semibold text-white hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                            >\r\n                                {buttonText}\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div >\r\n            </div >\r\n            // </>\r\n\r\n            // <div>\r\n            //     <div>\r\n            //         <div>\r\n            //             <form onSubmit={this.handleSubmit}>\r\n            //                 <h2>{heading}</h2>\r\n            //                 {errors.message && <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">{errors.message}</div>}\r\n            //                 <label htmlFor=\"email\">email:</label>\r\n            //                 <input\r\n            //                     id=\"email\"\r\n            //                     name=\"email\"\r\n            //                     onChange={this.handleChange}\r\n            //                     value={email}\r\n            //                     type=\"text\"\r\n            //                 />\r\n\r\n            //                 <label htmlFor=\"password\">password:</label>\r\n            //                 <input\r\n            //                     id=\"password\"\r\n            //                     name=\"password\"\r\n            //                     onChange={this.handleChange}\r\n            //                     type=\"password\"\r\n            //                 />\r\n            //                 {signUp && (\r\n            //                     <div>\r\n            //                         <label htmlFor=\"username\">username:</label>\r\n            //                         <input\r\n            //                             id=\"username\"\r\n            //                             name=\"username\"\r\n            //                             onChange={this.handleChange}\r\n            //                             value={username}\r\n            //                             type=\"text\"\r\n            //                         />\r\n\r\n            //                         <label htmlFor=\"image-url\">image URL:</label>\r\n            //                         <input\r\n            //                             id=\"image-url\"\r\n            //                             name=\"profileImageUrl\"\r\n            //                             onChange={this.handleChange}\r\n            //                             value={profileImageUrl}\r\n            //                             type=\"text\"\r\n            //                         />\r\n            //                     </div>\r\n            //                 )}\r\n            //                 <button className=\"text-sm font-semibold leading-6 text-gray-900\" type=\"submit\">\r\n            //                     {buttonText}\r\n            //                 </button>\r\n            //             </form>\r\n            //         </div>\r\n            //     </div>\r\n            // </div >\r\n        )\r\n    }\r\n}","C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\actions\\auth.js",["138","139"],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\actions\\errors.js",[],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\services\\api.js",[],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\reducers\\messages.js",[],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\components\\MessageTimeline.js",[],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\containers\\MessageList.js",[],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\components\\MessageItem.js",["140","141","142"],[],"import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DefaultProfileImg from \"../images/default-profile-image.jpg\";\r\nimport { TrashIcon } from '@heroicons/react/24/outline';\r\n\r\n\r\nconst MessageItem = ({ date, profileImageUrl, text, imageUrl, username, removeMessage, isCorrectUser }) => (\r\n    <li className=\"flex items-center space-x-3 py-1\">\r\n        <img\r\n            className=\"inline-block h-10 w-10 rounded-full ring-2 ring-white\"\r\n            src={profileImageUrl || DefaultProfileImg}\r\n            alt={username}\r\n        />\r\n        <div className=\"message-area space-y-1\">\r\n            <Link to=\"/\">@{username} &nbsp;</Link>\r\n            <span>\r\n                <Moment format=\"Do MMM YYYY\">\r\n                    {date}\r\n                </Moment>\r\n            </span>\r\n\r\n            <p>{text}</p>\r\n            {isCorrectUser && (\r\n                <div className=\"relative rounded-full px-3 text-sm leading-6 ring-1 text-gray-400 hover:text-gray-600\">\r\n                    <a onClick={removeMessage} className=\"font-semibold cursor-pointer\">\r\n                        <span className=\"absolute inset-0\" aria-hidden=\"true\" />\r\n                        delete\r\n                    </a>\r\n                </div>\r\n            )}\r\n        </div>\r\n        {imageUrl && (\r\n            <img src={imageUrl} height=\"100\" width=\"100\" />\r\n        )}\r\n\r\n    </li>\r\n)\r\n\r\nexport default MessageItem;","C:\\code\\web-dev\\warbler\\warbler-client\\src\\store\\actions\\messages.js",[],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\components\\UserAside.js",["143"],[],"import React from \"react\";\r\nimport DefaultProfileImg from \"../images/default-profile-image.jpg\";\r\n\r\nconst UserAside = ({ profileImageUrl, username }) => {\r\n    return (\r\n        <aside>\r\n            <div>\r\n                <div>\r\n                    {/* <img\r\n                        src={profileImageUrl || DefaultProfileImg}\r\n                        alt={username}\r\n                        width=\"200\"\r\n                        height=\"200\"\r\n                    /> */}\r\n                </div>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default UserAside;","C:\\code\\web-dev\\warbler\\warbler-client\\src\\hocs\\withAuth.js",[],[],"C:\\code\\web-dev\\warbler\\warbler-client\\src\\containers\\MessageForm.js",[],[],{"ruleId":"144","severity":1,"message":"145","line":8,"column":1,"nodeType":"146","endLine":19,"endColumn":3},{"ruleId":"144","severity":1,"message":"145","line":3,"column":1,"nodeType":"146","endLine":12,"endColumn":3},{"ruleId":"147","severity":1,"message":"148","line":1,"column":28,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"151","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":15},{"ruleId":"152","severity":1,"message":"153","line":75,"column":25,"nodeType":"154","endLine":75,"endColumn":124},{"ruleId":"152","severity":1,"message":"155","line":98,"column":25,"nodeType":"154","endLine":98,"endColumn":62},{"ruleId":"147","severity":1,"message":"156","line":3,"column":20,"nodeType":"149","messageId":"150","endLine":3,"endColumn":28},{"ruleId":"147","severity":1,"message":"148","line":5,"column":10,"nodeType":"149","messageId":"150","endLine":5,"endColumn":18},{"ruleId":"147","severity":1,"message":"157","line":7,"column":10,"nodeType":"149","messageId":"150","endLine":7,"endColumn":16},{"ruleId":"147","severity":1,"message":"158","line":8,"column":10,"nodeType":"149","messageId":"150","endLine":8,"endColumn":19},{"ruleId":"147","severity":1,"message":"159","line":8,"column":21,"nodeType":"149","messageId":"150","endLine":8,"endColumn":30},{"ruleId":"147","severity":1,"message":"160","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"161","line":36,"column":34,"nodeType":"149","messageId":"150","endLine":36,"endColumn":42},{"ruleId":"147","severity":1,"message":"162","line":37,"column":54,"nodeType":"149","messageId":"150","endLine":37,"endColumn":61},{"ruleId":"147","severity":1,"message":"163","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":19},{"ruleId":"147","severity":1,"message":"164","line":3,"column":21,"nodeType":"149","messageId":"150","endLine":3,"endColumn":33},{"ruleId":"147","severity":1,"message":"165","line":5,"column":10,"nodeType":"149","messageId":"150","endLine":5,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":26,"column":21,"nodeType":"154","endLine":26,"endColumn":89},{"ruleId":"166","severity":1,"message":"167","line":34,"column":13,"nodeType":"154","endLine":34,"endColumn":60},{"ruleId":"147","severity":1,"message":"168","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":25},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Redirect' is defined but never used.","'Dialog' is defined but never used.","'Bars3Icon' is defined but never used.","'XMarkIcon' is defined but never used.","'errors' is defined but never used.","'password' is assigned a value but never used.","'history' is assigned a value but never used.","'ADD_ERROR' is defined but never used.","'REMOVE_ERROR' is defined but never used.","'TrashIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'DefaultProfileImg' is defined but never used."]